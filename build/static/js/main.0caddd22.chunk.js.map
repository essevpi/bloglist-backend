{"version":3,"sources":["components/LoginForm.js","services/login.js","services/blogs.js","components/Blog.js","components/BlogList.js","components/BlogForm.js","components/Notification.js","components/Navbar.js","components/Togglable.js","App.js","index.js"],"names":["LoginForm","handleLogin","useState","username","setUsername","password","setPassword","onSubmit","e","preventDefault","className","type","value","onChange","target","exports","logIn","credentials","a","axios","post","response","data","baseUrl","token","create","newObject","config","headers","Authorization","getAllBlogs","get","setToken","newToken","update","blogToUpdate","put","id","remove","blogToRemove","delete","Blog","blog","user","addLike","removeBlog","contentVisible","setContentVisible","showContent","display","title","author","onClick","style","href","url","name","likes","updatedBlog","fontSize","BlogList","blogs","sort","b","map","BlogForm","createBlog","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogUrl","setBlogUrl","Notification","message","notificationStyle","color","backgroundColor","border","borderRadius","padding","width","textAlign","margin","Navbar","handleLogout","Togglable","React","forwardRef","props","ref","visible","setVisible","showWhenVisible","hideWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","App","setBlogs","setUser","notificationType","setNotificationType","notificationMessage","setNotificationMessage","blogFormRef","useRef","useEffect","blogService","console","log","setAllBlogs","loggedUserJSON","window","localStorage","getItem","loggedUser","JSON","parse","loginService","setItem","stringify","error","setTimeout","blogObject","savedBlog","current","concat","confirm","filter","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0caddd22.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst LoginForm = ({ handleLogin }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        handleLogin(username, password);\r\n\r\n        setUsername('');\r\n        setPassword('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleLoginSubmit} className=\"LoginForm\">\r\n            <div className=\"LoginField\">\r\n                <label>Username</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={handleUsernameChange} />\r\n            </div>\r\n            <div className=\"LoginField\">\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={handlePasswordChange} />\r\n            </div>\r\n            <button type=\"submit\">Log In</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/login';\r\n\r\nconst logIn = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials);\r\n    return response.data;\r\n};\r\n\r\nconst exports = { logIn };\r\n\r\nexport default exports;","import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`;\r\n};\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: { Authorization: token }\r\n    };\r\n    const response = await axios.post(baseUrl, newObject, config);\r\n    return response.data;\r\n};\r\n\r\nconst getAllBlogs = async () => {\r\n    const response = await axios.get(baseUrl);\r\n    return response.data;\r\n};\r\n\r\nconst update = async (blogToUpdate) => {\r\n    const response = await axios.put(`${baseUrl}/${blogToUpdate.id}`, blogToUpdate);\r\n    return response.data;\r\n};\r\n\r\nconst remove = async (blogToRemove) => {\r\n    const config = {\r\n        headers: { Authorization: token }\r\n    };\r\n    const response = await axios.delete(`${baseUrl}/${blogToRemove.id}`, config);\r\n    return response.data;\r\n};\r\n\r\nconst exports = { getAllBlogs, setToken, create, update, remove };\r\n\r\nexport default exports;","import React, { useState } from 'react';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\n\r\nconst Blog = ({ blog, user, addLike, removeBlog }) => {\r\n    const [contentVisible, setContentVisible] = useState(false);\r\n\r\n    const showContent = { display: contentVisible ? '' : 'none' };\r\n\r\n    const toggleContentVisibility = () => {\r\n        setContentVisible(!contentVisible);\r\n    };\r\n\r\n    const updateLikes = () => {\r\n        const updatedBlog = {\r\n            ...blog,\r\n            likes: blog.likes + 1\r\n        };\r\n        addLike(updatedBlog);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Blog\">\r\n            <div className=\"BlogHeading\">\r\n                <div className=\"BlogTitle\">\r\n                    <em>{blog.title}</em>\r\n                </div>\r\n                <div className=\"BlogAuthor\">\r\n                    {blog.author}\r\n                </div>\r\n\r\n                <button className=\"BlogViewBtn\" onClick={toggleContentVisibility}>\r\n                    {contentVisible ? 'Hide' : 'View'}\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"BlogDesc\" style={showContent}>\r\n                <div className=\"BlogLink\">\r\n                    <a href=\"#\">\r\n                        {blog.url}\r\n                    </a>\r\n                </div>\r\n\r\n                <div>\r\n                    Posted By  {blog.user.name}\r\n                </div>\r\n\r\n                <div className=\"RemoveBlogBtn\">\r\n                    {\r\n                        user !== null && user.username === blog.user.username &&\r\n                        <button onClick={() => removeBlog(blog)}>Remove</button>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"BlogLikes\">\r\n                    {blog.likes} likes\r\n                    <button className=\"BlogLikeBtn\" onClick={updateLikes}><ThumbUpIcon style={{ fontSize: '1rem' }}/></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\nimport Blog from './Blog';\r\n\r\nconst BlogList = ({ blogs, user, addLike, removeBlog }) => {\r\n    return (\r\n        <div className=\"BlogList\">\r\n            {blogs.sort((a,b) => b.likes - a.likes).map(blog =>\r\n                <Blog\r\n                    key={blog.id}\r\n                    blog={blog}\r\n                    user={user}\r\n                    addLike={addLike}\r\n                    removeBlog={removeBlog}\r\n                />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogList;\r\n","import React, { useState } from 'react';\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n    const [blogTitle, setBlogTitle] = useState('');\r\n    const [blogAuthor, setBlogAuthor] = useState('');\r\n    const [blogUrl, setBlogUrl] = useState('');\r\n\r\n    const handleBlogTitleChange = (e) => {\r\n        setBlogTitle(e.target.value);\r\n    };\r\n\r\n    const handleBlogAuthorChange = (e) => {\r\n        setBlogAuthor(e.target.value);\r\n    };\r\n\r\n    const handleBlogUrlChange = (e) => {\r\n        setBlogUrl(e.target.value);\r\n    };\r\n\r\n    const handleBlogSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        createBlog({\r\n            title: blogTitle,\r\n            author: blogAuthor,\r\n            url: blogUrl\r\n        });\r\n\r\n        setBlogTitle('');\r\n        setBlogAuthor('');\r\n        setBlogUrl('');\r\n    };\r\n\r\n    return (\r\n        <form className=\"BlogForm\" onSubmit={handleBlogSubmit}>\r\n            <div className=\"BlogField\">\r\n                <label>Title: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={blogTitle}\r\n                    onChange={handleBlogTitleChange}\r\n                />\r\n            </div>\r\n            <div className=\"BlogField\">\r\n                <label>Author: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={blogAuthor}\r\n                    onChange={handleBlogAuthorChange}\r\n                />\r\n            </div>\r\n            <div className=\"BlogField\">\r\n                <label>URL: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={blogUrl}\r\n                    onChange={handleBlogUrlChange}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Create Blog</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default BlogForm;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ type, message }) => {\r\n    const notificationStyle = {\r\n        color: type === 'Success' ? 'var(--theme-primary)' : '#dd0000',\r\n        backgroundColor: '#2b2b2b',\r\n        border: `1px solid ${type === 'Success' ? 'var(--theme-primary)' : '#dd0000'}`,\r\n        borderRadius: '0.45rem',\r\n        padding: '1rem',\r\n        width: '50%',\r\n        textAlign: 'center',\r\n        margin: '1rem auto'\r\n    };\r\n\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div style={notificationStyle}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nconst Navbar = ({ user, handleLogout }) => {\r\n    return (\r\n        <div className=\"NavContainer\">\r\n            <div className=\"NavLeftHalf\">\r\n                <div className=\"NavHeader\">\r\n                    <MenuBookIcon className=\"NavLogo\" />\r\n                    <p className=\"NavTitle\">Bloglist</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"NavRightHalf\">\r\n                {\r\n                    user === null\r\n                        ? null\r\n                        : <div className=\"NavUser\">\r\n                            <p>{user.name}</p>\r\n                            <button onClick={handleLogout}>Log Out</button>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const showWhenVisible = { display: visible ? '' : 'none' };\r\n    const hideWhenVisible = { display: visible ? 'none' : '' };\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible);\r\n    };\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisibility\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility}>\r\n                    {props.buttonLabel}\r\n                </button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                <div className=\"TogglableModal\">\r\n                    {props.buttonLabel}\r\n                    <button onClick={toggleVisibility} className=\"CancelBtn\">Cancel</button>\r\n                </div>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nTogglable.displayName = 'Togglable';\r\n\r\nTogglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Togglable;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport LoginForm from './components/LoginForm';\r\nimport loginService from './services/login';\r\nimport blogService from './services/blogs';\r\nimport BlogList from './components/BlogList';\r\nimport BlogForm from './components/BlogForm';\r\nimport Notification from './components/Notification';\r\nimport Navbar from './components/Navbar';\r\nimport Togglable from './components/Togglable';\r\n\r\nconst App = () => {\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [notificationType, setNotificationType] = useState('');\r\n    const [notificationMessage, setNotificationMessage] = useState(null);\r\n\r\n    const blogFormRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const setAllBlogs = async () => {\r\n            try {\r\n                const blogs = await blogService.getAllBlogs();\r\n                setBlogs(blogs);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        };\r\n        if (user) {\r\n            setAllBlogs();\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('bloglistLoggedUser');\r\n        if (loggedUserJSON) {\r\n            const loggedUser = JSON.parse(loggedUserJSON);\r\n            setUser(loggedUser);\r\n            blogService.setToken(loggedUser.token);\r\n        }\r\n    }, []);\r\n\r\n    const handleLogin = async (username, password) => {\r\n        try {\r\n            const user = await loginService.logIn({ username, password });\r\n            window.localStorage.setItem('bloglistLoggedUser', JSON.stringify(user));\r\n            blogService.setToken(user.token);\r\n            setUser(user);\r\n\r\n            setNotificationMessage(`${user.username} sucessfully logged in`);\r\n            setNotificationType('Success');\r\n        } catch (exception) {\r\n            setNotificationMessage(`Could not log in: ${exception.response.data.error}`);\r\n            setNotificationType('Error');\r\n        }\r\n        setTimeout(() => {\r\n            setNotificationMessage(null);\r\n        }, 5000);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        window.localStorage.removeItem('bloglistLoggedUser');\r\n        setUser(null);\r\n    };\r\n\r\n    const createBlog = async (blogObject) => {\r\n        try {\r\n            const savedBlog = await blogService.create(blogObject);\r\n            blogFormRef.current.toggleVisibility();\r\n            setBlogs(blogs.concat(savedBlog));\r\n            setNotificationMessage(`'${savedBlog.title}' sucessfully added to blogs`);\r\n            setNotificationType('Success');\r\n        } catch (exception) {\r\n            setNotificationMessage(`Cannot add this blog: ${exception.response.data.error}`);\r\n            setNotificationType('Error');\r\n        }\r\n        setTimeout(() => {\r\n            setNotificationMessage(null);\r\n        }, 5000);\r\n    };\r\n\r\n    const removeBlog = async (blogToRemove) => {\r\n        if (window.confirm(`Are you sure you want to remove '${blogToRemove.title}'?`)) {\r\n            try {\r\n                await blogService.remove(blogToRemove);\r\n                setBlogs(blogs.filter(blog => blog.id !== blogToRemove.id));\r\n                setNotificationMessage(`'${blogToRemove.title}' sucessfully removed from blogs`);\r\n                setNotificationType('Success');\r\n            } catch (exception) {\r\n                setNotificationMessage(`Cannot remove this blog: ${exception.response.data.error}`);\r\n                setNotificationType('Error');\r\n            }\r\n            setTimeout(() => {\r\n                setNotificationMessage(null);\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    const addLike = async (blogToUpdate) => {\r\n        try {\r\n            const updatedBlog = await blogService.update(blogToUpdate);\r\n            setBlogs(blogs.map(blog => blog.id !== blogToUpdate.id ? blog : updatedBlog));\r\n        } catch (exception) {\r\n            //error\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar user={user} handleLogout={handleLogout} />\r\n            <div className=\"MainContent\">\r\n                {user === null ?\r\n                    <div>\r\n                        <Notification type={notificationType} message={notificationMessage} />\r\n                        <div>\r\n                            <h2>Welcome to Bloglist!</h2>\r\n                            <p>Login to start browsing blogs</p>\r\n                        </div>\r\n                        <Togglable buttonLabel=\"Login\">\r\n                            <LoginForm\r\n                                handleLogin={handleLogin}\r\n                            />\r\n                        </Togglable>\r\n                    </div> :\r\n                    <div className=\"BlogsContent\">\r\n                        <BlogList\r\n                            blogs={blogs}\r\n                            user={user}\r\n                            addLike={addLike}\r\n                            removeBlog={removeBlog}\r\n                        />\r\n                        <Notification type={notificationType} message={notificationMessage} />\r\n                        <Togglable buttonLabel=\"Create blog\" ref={blogFormRef}>\r\n                            <BlogForm\r\n                                createBlog={createBlog}\r\n                            />\r\n                        </Togglable>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}